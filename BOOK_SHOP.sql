-- 211005

-- 도서 쇼핑몰 프로젝트 FINAL_SHOP

-- 메뉴 정보 테이블
CREATE TABLE MENU (
    MENU_CODE VARCHAR2(50)
    , MENU_NAME VARCHAR2(100) NOT NULL UNIQUE
    , MENU_URI VARCHAR2(100) NOT NULL UNIQUE
    , CONSTRAINT MENU_PK PRIMARY KEY (MENU_CODE)
    );
    
DROP TABLE MENU;

SELECT
    *
FROM MENU;

DELETE MENU;

INSERT INTO MENU VALUES ('MENU_001','상품관리','itemManage');
INSERT INTO MENU VALUES ('MENU_002','회원관리','memberManage');
INSERT INTO MENU VALUES ('MENU_003','매출관리','saleManage');

-- 사이드 메뉴 정보 테이블
CREATE TABLE SIDE_MENU (
    SIDE_MENU_CODE VARCHAR2(50)
    , SIDE_MENU_NAME VARCHAR2(100) NOT NULL UNIQUE
    , SIDE_MENU_URI VARCHAR2(100) NOT NULL UNIQUE
    , MENU_CODE VARCHAR2(50)
    , CONSTRAINT SIDE_MENU_FK FOREIGN KEY (MENU_CODE) REFERENCES MENU (MENU_CODE) ON DELETE CASCADE
    , CONSTRAINT SIDE_MENU_PK PRIMARY KEY (SIDE_MENU_CODE)
    );

SELECT
    *
FROM SIDE_MENU;

DELETE SIDE_MENU;

DROP TABLE SIDE_MENU;

INSERT INTO SIDE_MENU VALUES ('SIDE_001','카테고리관리','categoryManage','MENU_001');
INSERT INTO SIDE_MENU VALUES ('SIDE_002','상품등록','regItem','MENU_001');
INSERT INTO SIDE_MENU VALUES ('SIDE_003','상품관리','itemManage','MENU_001');

INSERT INTO SIDE_MENU VALUES ('SIDE_004','회원조회','memberList','MENU_002');
INSERT INTO SIDE_MENU VALUES ('SIDE_005','회원관리','memberManage','MENU_002');

-- 쇼핑몰 회원 테이블
-- 아이디(기본키), 비밀번호, 이름, 연락처, 주소, 성별, 관리자여부, 가입일
-- ID, PW, NAME, TELL, ADDR, GENDER, IS_ADMIN, JOIN_DATE
    -- TELL 010-1111-2222
    -- GENDER 남 OR 여
    -- IS_ADMIN Y OR N
    -- ID 기본키 적용, 제약조건 이름 지정
    
CREATE TABLE BOOK_MEMBER (
    ID VARCHAR2(100)
    , PW VARCHAR2(100) NOT NULL
    , NAME VARCHAR2(100) NOT NULL
    , TELL VARCHAR2(30) NOT NULL
    , ADDR VARCHAR2(200)
    , GENDER VARCHAR2(6)
    , IS_ADMIN VARCHAR2(6) DEFAULT 'N'
    , JOIN_DATE DATE DEFAULT SYSDATE
    , CONSTRAINT MEMBER_PK PRIMARY KEY (ID)
);


SELECT
    *
FROM BOOK_MEMBER;

INSERT INTO BOOK_MEMBER (
    ID
    , PW
    , NAME
    , TELL
    , IS_ADMIN
) VALUES (
    'admin'
    , '1111'
    , '관리자'
    , '01000000000'
    , 'Y'
);

SELECT
    ID
    , NAME
    , IS_ADMIN
FROM BOOK_MEMBER
WHERE ID = 'book01' AND PW = 'book01';

DELETE FROM BOOK_MEMBER WHERE ID = 'book01';

-- 쇼핑몰 상품 카테고리 테이블
-- 카테고리 코드(기본키), 카테고리명
-- 000 총류 100 철학 200 종교 300 사회과학 400 자연과학 500 기술과학 600 예술 700 언어 800 문학 900 역사

CREATE TABLE ITEM_CATEGORY (
   CATE_CODE VARCHAR2(50)
   , CATE_NAME VARCHAR2(100) UNIQUE NOT NULL
   , CONSTRAINT CATEGORY_PK PRIMARY KEY (CATE_CODE)
);

INSERT INTO ITEM_CATEGORY (
    CATE_CODE
    , CATE_NAME
) VALUES (
    (SELECT 'CATE_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(CATE_CODE,6,3))),0) + 1,3,0) FROM ITEM_CATEGORY)
    , '인문학'
);

DELETE ITEM_CATEGORY;

SELECT
    *
FROM ITEM_CATEGORY;

DROP TABLE ITEM_CATEGORY;

-- 쇼핑몰 상품 테이블
-- 상품코드(기본키), 상품명, 가격, 지은이, 출판사, 옮긴이, 등록일, 발행일, ISBN, 쪽수, 카테고리
-- ITEM_CODE, ITEM_NAME, ITEM_PRICE, WRITER, PUBLISHER , TRANSLATOR, REG_DATE, PUB_DATE, ISBN, PAGE, CATE_CODE
    -- ID 기본키 적용, 제약조건 이름 지정
    -- CATE_CODE 외래키 적용, 제약조건 이름 지정
    
CREATE TABLE BOOK_ITEM (
    ITEM_CODE VARCHAR2(50)
    , ITEM_NAME VARCHAR2(100) NOT NULL UNIQUE
    , ITEM_PRICE NUMBER NOT NULL
    , WRITER VARCHAR2(100) NOT NULL
    , PUBLISHER VARCHAR2(100) NOT NULL
    , TRANSLATOR VARCHAR2(100)
    , REG_DATE DATE DEFAULT SYSDATE
    , PUB_DATE DATE NOT NULL
    , ISBN VARCHAR2(100) UNIQUE NOT NULL
    , PAGE NUMBER
    , CATE_CODE VARCHAR2(50) NOT NULL
    , CONSTRAINT ITEM_PK PRIMARY KEY (ITEM_CODE)
    , CONSTRAINT ITEM_CATE_FK FOREIGN KEY (CATE_CODE) REFERENCES ITEM_CATEGORY (CATE_CODE)
);

SELECT
    *
FROM BOOK_ITEM;

DROP TABLE BOOK_ITEM;

DELETE FROM BOOK_ITEM WHERE ITEM_CODE = 'ITEM_003';

UPDATE BOOK_ITEM
  SET CONTENT = '13주년을 맞아 새롭게 선보이는 이도우의 장편소설 『사서함 110호의 우편물』. 30대 초중반, 어느덧 익숙해진 평범한 일상 속에서 사랑에 대한 설렘을 마음 한 자락 조용히 접어버린 이들의 이야기를 조금 느리게 그려낸 이 작품은 2004년 발표된 이래 수많은 독자들의 뜨거운 지지와 입소문으로 변함없이 사랑받고 있다.

여기 우리와 크게 다르지 않은, 적당히 외로워하며 살아가는 그들이 있다. 9년 차 라디오 프로그램 작가 공진솔과 피디이자 시인인 이건. 사소한 일에 상처받지 않을 만큼 어른이 됐다고 느끼는 진솔은 개편으로 바뀐 담당 피디가 시인이라는 말에 진솔은 원고에 트집이나 잡지 않을지 걱정스럽다. 이건과의 첫 미팅 자리, 무심코 펼쳐놓은 진솔의 다이어리에 적힌 글을 본 그가 소리 내어 읽고 만다. “올해의 목표 ‘연연하지 말자’. 어디에 연연하지 말잔 거예요?”

성숙한 어른이라는 겉보기와 달리 약점도 단점도 여전히 많은 그들에게 사랑은 흔해빠진 감정이고 때로는 부질없어서 환멸이 느껴질 때도 있다. 그럼에도 불구하고 ‘다시 한 번 사랑해보기로 한’ 그들의 이야기를 담담하면서도 깊이 있는 문장으로 담아내며 삶 속에서 어떤 것들은 포기할 수밖에 없는 우리를 위로해준다. 서툴지만 성실하게 사랑을 맞이하는 진솔과 건의 이야기에 FM 라디오, 오랜 창가(唱歌) 등 아날로그적인 감성이 더해져 더욱 애틋하게 독자의 마음을 두드린다.'
WHERE ITEM_CODE = 'ITEM_004';

UPDATE BOOK_ITEM
  SET CONTENT_TITLE = '네 사랑이 무사하기를, 내 사랑도 무사하니까'
WHERE ITEM_CODE = 'ITEM_004';

SELECT CONTENT_TITLE
FROM BOOK_ITEM;

		SELECT
    		ITEM_CODE
    		, ITEM_NAME
    		, TO_CHAR(ITEM_PRICE, '999,999,999,999,999') AS ITEM_PRICE
    		, WRITER
    		, PUBLISHER
    		, (SELECT CATE_NAME FROM ITEM_CATEGORY WHERE CATE_CODE = I.CATE_CODE) AS CATE_CODE
    		, REG_DATE
		FROM BOOK_ITEM I
		ORDER BY REG_DATE DESC;
        
		INSERT INTO BOOK_ITEM (
		    ITEM_CODE
		    , ITEM_NAME
		    , ITEM_PRICE
		    , WRITER
		    , PUBLISHER
		    , CATE_CODE
		) VALUES (
		    (SELECT 'ITEM_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(ITEM_CODE,6,3))),0) + 1,3,0) FROM BOOK_ITEM)
		    , '혼자 공부하는 스프링'
		    , 21600
		    , '신용권'
		    , '한빛미디어'
		    , 'CATE_002'
		);

-- 상품 이미지 정보 테이블
-- 이미지코드(기본키), 첨부한 파일 이름, 업로드 된 파일 이름, 상품코드(외래키), 메인이미지여부


CREATE TABLE BOOK_IMG (
    IMG_CODE VARCHAR2(100)
    , ORIGIN_IMG_NAME VARCHAR2(300)
    , ATTACHED_IMG_NAME VARCHAR2(300)
    , ITEM_CODE VARCHAR2(50)
    , IS_MAIN VARCHAR2(6)
    , CONSTRAINT IMG_PK PRIMARY KEY (IMG_CODE)
    , CONSTRAINT IMG_FK FOREIGN KEY (ITEM_CODE) REFERENCES BOOK_ITEM (ITEM_CODE)
);

SELECT
    *
FROM BOOK_IMG;

DELETE BOOK_IMG WHERE IMG_CODE = 'IMG_010';

SELECT NVL(MAX(TO_NUMBER(SUBSTR(IMG_CODE,5,3))) + 1, 1) FROM BOOK_IMG;

SELECT
    I.ITEM_CODE
    , ITEM_NAME
    , TO_CHAR(ITEM_PRICE, '999,999,999,999,999') AS ITEM_PRICE
    , WRITER
    , PUBLISHER
    , (SELECT CATE_NAME FROM ITEM_CATEGORY WHERE CATE_CODE = I.CATE_CODE) AS CATE_CODE
    , REG_DATE
    , IMG_CODE
    , ORIGIN_IMG_NAME
    , ATTACHED_IMG_NAME
    , IS_MAIN
    FROM BOOK_ITEM I, BOOK_IMG M
    WHERE I.ITEM_CODE = M.ITEM_CODE
    ORDER BY REG_DATE DESC;

		SELECT
			I.ITEM_CODE
			, ITEM_NAME
			, TO_CHAR(ITEM_PRICE, '999,999,999,999,999') AS ITEM_PRICE
			, WRITER
			, (SELECT CATE_NAME FROM ITEM_CATEGORY WHERE CATE_CODE = I.CATE_CODE) AS CATE_CODE
			, REG_DATE
			, IMG_CODE
			, ORIGIN_IMG_NAME
			, IS_MAIN
		FROM BOOK_ITEM I, BOOK_IMG M
		WHERE I.ITEM_CODE = M.ITEM_CODE
		AND IS_MAIN = 'Y'
		ORDER BY REG_DATE DESC;

		SELECT
			I.ITEM_CODE
			, ITEM_NAME
			, TO_CHAR(ITEM_PRICE, '999,999,999,999,999') AS ITEM_PRICE
			, WRITER
			, PUBLISHER
    		, TRANSLATOR
			, (SELECT CATE_NAME FROM ITEM_CATEGORY WHERE CATE_CODE = I.CATE_CODE) AS CATE_CODE
			, REG_DATE
			, PUB_DATE
			, PAGE
			, ISBN
			, IMG_CODE
			, ATTACHED_IMG_NAME
			, IS_MAIN
            , CONTENT
            , CONTENT_TITLE
		FROM BOOK_ITEM I, BOOK_IMG M
		WHERE I.ITEM_CODE = M.ITEM_CODE
		AND IS_MAIN = 'Y'
		ORDER BY REG_DATE DESC;
        
ALTER TABLE BOOK_ITEM ADD CONTENT_TITLE VARCHAR2(300);


		SELECT DISTINCT 
			I.ITEM_CODE
			, ITEM_NAME
			, ITEM_PRICE
			, WRITER
			, PUBLISHER
    		, TRANSLATOR
			, (SELECT CATE_NAME FROM ITEM_CATEGORY WHERE CATE_CODE = I.CATE_CODE) AS CATE_CODE
			, REG_DATE
			, PUB_DATE
			, CONTENT_TITLE
			, PAGE
			, ISBN
		FROM BOOK_ITEM I, BOOK_IMG M
		WHERE I.ITEM_CODE = M.ITEM_CODE
		ORDER BY REG_DATE DESC;

-- 게시글 테이블

CREATE TABLE BOOK_BOARD (
    BOARD_NUM NUMBER PRIMARY KEY
    ,TITLE VARCHAR2(200) NOT NULL
    ,WRITER VARCHAR2(100) REFERENCES BOOK_MEMBER(ID)
    ,CREATE_DATE DATE DEFAULT SYSDATE
);

-- 데이터 10개씩 조회하기
-- ROWNUM : 모든 테이블이 가지고 있는 컬럼. 행 번호
-- ORDER BY 이전에 행 번호를 매기기 때문에 순번이 섞이게 됨
SELECT
    BOARD_NUM
    , TITLE
FROM BOOK_BOARD
WHERE BOARD_NUM > 20;
-- 서브쿼리로 먼저 정렬 해준뒤 , ROWNUM 조회하기
-- 하지만 이상태로 행을 셀 수 없음
SELECT
    ROWNUM
    , BOARD_NUM
    , TITLE
FROM (SELECT
    BOARD_NUM
    , TITLE
FROM BOOK_BOARD
ORDER BY BOARD_NUM DESC)
WHERE ROWNUM BETWEEN 11 AND 20 ;

-- FROM in FROM, 별칭...
SELECT ROW_NUM
    , BOARD_NUM
    , TITLE
FROM
    (
    SELECT ROWNUM AS ROW_NUM , BOARD_NUM , TITLE
    FROM 
        (SELECT BOARD_NUM, TITLE
        FROM BOOK_BOARD
        ORDER BY BOARD_NUM DESC)
    )
WHERE ROW_NUM >= 11 AND CNT <= 20; -- 11과 20은 변수

DELETE BOOK_BOARD;

INSERT INTO BOOK_BOARD VALUES (1, 'A', 'admin', SYSDATE);
INSERT INTO BOOK_BOARD VALUES (2, 'A', 'admin', SYSDATE);
INSERT INTO BOOK_BOARD VALUES (3, 'A', 'admin', SYSDATE);
INSERT INTO BOOK_BOARD VALUES (4, 'A', 'admin', SYSDATE);
INSERT INTO BOOK_BOARD VALUES (5, 'A', 'admin', SYSDATE);
INSERT INTO BOOK_BOARD VALUES (6, 'A', 'admin', SYSDATE);
INSERT INTO BOOK_BOARD VALUES (7, 'A', 'admin', SYSDATE);
INSERT INTO BOOK_BOARD VALUES (8, 'A', 'admin', SYSDATE);
INSERT INTO BOOK_BOARD VALUES (9, 'A', 'admin', SYSDATE);
INSERT INTO BOOK_BOARD VALUES (10, 'A', 'admin', SYSDATE);
INSERT INTO BOOK_BOARD VALUES (11, 'A', 'admin', SYSDATE);
INSERT INTO BOOK_BOARD VALUES (12, 'A', 'admin', SYSDATE);
INSERT INTO BOOK_BOARD VALUES (13, 'A', 'admin', SYSDATE);
INSERT INTO BOOK_BOARD VALUES (14, 'A', 'admin', SYSDATE);
INSERT INTO BOOK_BOARD VALUES (15, 'A', 'admin', SYSDATE);
INSERT INTO BOOK_BOARD VALUES (16, 'A', 'admin', SYSDATE);
INSERT INTO BOOK_BOARD VALUES (17, 'A', 'admin', SYSDATE);
INSERT INTO BOOK_BOARD VALUES (18, 'A', 'admin', SYSDATE);
INSERT INTO BOOK_BOARD VALUES (19, 'A', 'admin', SYSDATE);
INSERT INTO BOOK_BOARD VALUES (20, 'A', 'admin', SYSDATE);
INSERT INTO BOOK_BOARD VALUES (21, 'A', 'admin', SYSDATE);
INSERT INTO BOOK_BOARD VALUES (22, 'A', 'admin', SYSDATE);
INSERT INTO BOOK_BOARD VALUES (23, 'A', 'admin', SYSDATE);
INSERT INTO BOOK_BOARD VALUES (24, 'A', 'admin', SYSDATE);
INSERT INTO BOOK_BOARD VALUES (25, 'A', 'admin', SYSDATE);
INSERT INTO BOOK_BOARD VALUES (26, 'A', 'admin', SYSDATE);
INSERT INTO BOOK_BOARD VALUES (27, 'A', 'admin', SYSDATE);
INSERT INTO BOOK_BOARD VALUES (28, 'A', 'admin', SYSDATE);
INSERT INTO BOOK_BOARD VALUES (29, 'A', 'admin', SYSDATE);
INSERT INTO BOOK_BOARD VALUES (30, 'A', 'admin', SYSDATE);





